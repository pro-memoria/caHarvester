
#PASTOR: Code generated by XML::Pastor/1.0.4 at 'Sun Jun 28 20:45:06 2015'

use utf8;
use strict;
use warnings;
no warnings qw(uninitialized);

use XML::Pastor;



#================================================================

package SAN::EAC::Type::nameEntryParallel_nameEntry;

use SAN::EAC::Type::stringNotEmpty;

our @ISA=qw(XML::Pastor::ComplexType);

SAN::EAC::Type::nameEntryParallel_nameEntry->mk_accessors( qw(_localType _langCode part));

# Attribute accessor aliases

sub localType { &_localType; }
sub langCode { &_langCode; }

SAN::EAC::Type::nameEntryParallel_nameEntry->XmlSchemaType( bless( {
         'attributeInfo' => {
                              'langCode' => bless( {
                                                   'class' => 'XML::Pastor::Builtin::NMTOKEN',
                                                   'metaClass' => 'SAN::EAC::Pastor::Meta',
                                                   'name' => 'langCode',
                                                   'scope' => 'local',
                                                   'targetNamespace' => 'http://san.mibac.it/eac-san/',
                                                   'type' => 'NMTOKEN|http://www.w3.org/2001/XMLSchema',
                                                   'use' => 'required'
                                                 }, 'XML::Pastor::Schema::Attribute' ),
                              'localType' => bless( {
                                                    'class' => undef,
                                                    'fixed' => 'altradenominazione',
                                                    'metaClass' => 'SAN::EAC::Pastor::Meta',
                                                    'name' => 'localType',
                                                    'scope' => 'local',
                                                    'targetNamespace' => 'http://san.mibac.it/eac-san/'
                                                  }, 'XML::Pastor::Schema::Attribute' )
                            },
         'attributePrefix' => '_',
         'attributes' => [
                           'localType',
                           'langCode'
                         ],
         'baseClasses' => [
                            'XML::Pastor::ComplexType'
                          ],
         'class' => 'SAN::EAC::Type::nameEntryParallel_nameEntry',
         'contentType' => 'complex',
         'elementInfo' => {
                            'part' => bless( {
                                             'class' => 'SAN::EAC::Type::stringNotEmpty',
                                             'maxOccurs' => 'unbounded',
                                             'metaClass' => 'SAN::EAC::Pastor::Meta',
                                             'name' => 'part',
                                             'scope' => 'local',
                                             'targetNamespace' => 'http://san.mibac.it/eac-san/',
                                             'type' => 'stringNotEmpty|http://san.mibac.it/eac-san/'
                                           }, 'XML::Pastor::Schema::Element' )
                          },
         'elements' => [
                         'part'
                       ],
         'isRedefinable' => 1,
         'metaClass' => 'SAN::EAC::Pastor::Meta',
         'name' => 'nameEntryParallel_nameEntry',
         'nameIsAutoGenerated' => 1,
         'scope' => 'local',
         'targetNamespace' => 'http://san.mibac.it/eac-san/'
       }, 'XML::Pastor::Schema::ComplexType' ) );

1;


__END__



=head1 NAME

B<SAN::EAC::Type::nameEntryParallel_nameEntry>  -  A class generated by L<XML::Pastor> . 


=head1 ISA

This class descends from L<XML::Pastor::ComplexType>.


=head1 CODE GENERATION

This module was automatically generated by L<XML::Pastor> version 1.0.4 at 'Sun Jun 28 20:45:06 2015'


=head1 ATTRIBUTE ACCESSORS

=over

=item B<_langCode>(), B<langCode>()      - See L<XML::Pastor::Builtin::NMTOKEN>.

=item B<_localType>(), B<localType>()

=back


=head1 CHILD ELEMENT ACCESSORS

=over

=item B<part>()      - See L<SAN::EAC::Type::stringNotEmpty>.

=back


=head1 SEE ALSO

L<XML::Pastor::ComplexType>, L<XML::Pastor>, L<XML::Pastor::Type>, L<XML::Pastor::ComplexType>, L<XML::Pastor::SimpleType>


=cut
